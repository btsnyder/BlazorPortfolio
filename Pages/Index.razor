@page "/"
@inject NavigationManager NavigationManager

<PageTitle>Home</PageTitle>

<MudText Class="fw-bold"></MudText>
<MudCarousel Style=@($"height: {_projectHeight};") TData="object">
    <MudCarouselItem Transition="@Transition.Fade" Color="@Color.Primary">
		<div class="d-flex flex-column flex-column justify-center" style="height:100%">
            <MudImage ObjectFit="@ObjectFit.Cover" Height="200" Width="200" Src="images/wood.png" Alt="Wood Logo" Class="mx-auto mt-auto"/>
            <MudText Class="mx-auto" Typo="@_titleSize"><b>Lumber Mill Application</b></MudText>
            @if (_current > Breakpoint.Sm)
            {
                <MudText Class="mx-auto mb-5" Style="font-style: italic" Typo="@Typo.body1">A Windows application that entered and tracked data related to lumber management.</MudText>
            }
            <MudButton Class="mx-auto mb-auto" Style="color: white !important; border-color: white !important;" 
                Variant="@Variant.Outlined" Size="@Size.Large" Link="/lumber" Target="_self">
                Learn More
            </MudButton>
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="@Transition.Fade" Color="@Color.Secondary">
		<div class="d-flex flex-column flex-column justify-center" style="height:100%">
            <MudImage ObjectFit="@ObjectFit.Cover" Height="200" Width="200" Src="images/saw.png" Alt="Saw Logo" Class="mx-auto mt-auto"/>
            <MudText Class="mx-auto" Typo="@_titleSize"><b>Saw Vision</b></MudText>
            @if (_current > Breakpoint.Sm)
            {
                <MudText Class="mx-auto mb-5" Style="font-style: italic" Typo="@Typo.body1">Leveraging machine learning and computer vision to analyze saw quality.</MudText>
            }
            <MudButton Class="mx-auto mb-auto" Style="color: white !important; border-color: white !important;" 
                Variant="@Variant.Outlined" Size="@Size.Large" Link="/saw" Target="_self">
                Learn More
            </MudButton>
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="@Transition.Fade" Color="@Color.Tertiary">
		<div class="d-flex flex-column flex-column justify-center" style="height:100%">
            <MudImage ObjectFit="@ObjectFit.Cover" Height="200" Width="200" Src="images/toolbox.png" Alt="Toolbox Logo" Class="mx-auto mt-auto"/>
            <MudText Class="mx-auto" Typo="@_titleSize"><b>Lease Toolbox</b></MudText>
            @if (_current > Breakpoint.Sm)
            {
                <MudText Class="mx-auto mb-5" Style="font-style: italic" Typo="@Typo.body1">Providing straightforward interface to handle complex lease calculations.</MudText>
            }
            <MudButton Class="mx-auto mb-auto" Style="color: white !important; border-color: white !important;" 
                Variant="@Variant.Outlined" Size="@Size.Large" Link="/lease" Target="_self">
                Learn More
            </MudButton>
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="@Transition.Fade" Color="@Color.Success">
		<div class="d-flex flex-column flex-column justify-center" style="height:100%">
            <MudImage ObjectFit="@ObjectFit.Cover" Height="200" Width="200" Src="images/trailer.png" Alt="Trailer Logo" Class="mx-auto mt-auto"/>
            <MudText Class="mx-auto" Typo="@_titleSize"><b>Truckstop</b></MudText>
            @if (_current > Breakpoint.Sm)
            {
                <MudText Class="mx-auto mb-5" Style="font-style: italic" Typo="@Typo.body1">A large-scale application used to track freight shipping.</MudText>
            }
            <MudButton Class="mx-auto mb-auto" Style="color: white !important; border-color: white !important;" 
                Variant="@Variant.Outlined" Size="@Size.Large" Link="/truckstop" Target="_self">
                Learn More
            </MudButton>
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="@Transition.Fade" Color="@Color.Info">
		<div class="d-flex flex-column flex-column justify-center" style="height:100%">
            <MudImage ObjectFit="@ObjectFit.Cover" Height="200" Width="200" Src="images/sword.png" Alt="Sword Logo" Class="mx-auto mt-auto"/>
            <MudText Class="mx-auto" Typo="@_titleSize"><b>DM Advantage</b></MudText>
            @if (_current > Breakpoint.Sm)
            {
                <MudText Class="mx-auto mb-5" Style="font-style: italic" Typo="@Typo.body1">A personal project to help track D&D stats.</MudText>
            }
            <MudButton Class="mx-auto mb-auto" Style="color: white !important; border-color: white !important;" 
                Variant="@Variant.Outlined" Size="@Size.Large" Link="https://github.com/btsnyder/DMAdvantage" Target="_blank">
                View Code
            </MudButton>
        </div>
    </MudCarouselItem>
</MudCarousel>

<MudButton Class="d-flex justify-center my-5" Size="Size.Large" Variant="@Variant.Filled" StartIcon="@Icons.Filled.Download" Color="@Color.Warning"
    Link="https://drive.google.com/uc?export=download&id=1aIVY1gKueoZ0jSqshsnEw9mBbHfNOQ-f" Target="_blank">Download Resume</MudButton>

@code {
    private Guid _subscriptionId;
    private Breakpoint _current;
    private string _projectHeight;
    private Typo _titleSize;

    [Inject] IBreakpointService BreakpointListener { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _current = await BreakpointListener.GetBreakpoint();
            UpdateView();

            var subscriptionResult = await BreakpointListener.Subscribe((breakpoint) =>
            {
                _current = breakpoint;
                UpdateView();
                InvokeAsync(StateHasChanged);
            }, new ResizeOptions
			{
				ReportRate = 250,
				NotifyOnBreakpointOnly = true,
			});

            _subscriptionId = subscriptionResult.SubscriptionId;
            StateHasChanged();
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    private void UpdateView()
    {
        if (_current <= Breakpoint.Sm)
        {
            _titleSize = Typo.h5;
            _projectHeight = "400px";
        }
        else
        {
            _titleSize = Typo.h4;
            _projectHeight = "500px";
        }
    }

	public async ValueTask DisposeAsync() => await BreakpointListener.Unsubscribe(_subscriptionId);
}